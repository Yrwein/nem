#!/usr/bin/python

import argparse
from lib import network
import os
import time

parser = argparse.ArgumentParser(description='Connect to wireless network with WPA')
parser.add_argument('--ssid', '-s', help='SSID for wifi access point')
parser.add_argument('--pwd', '-p', help='passphrase for wifi access point')
parser.add_argument('--last', '-l', action='store_true', help='use last saved connection')

args = parser.parse_args()

print('Card info:')
print('  ' + network.card_info())

print('Interface name:')
iface_name = network.iface_name()
print('  ' + iface_name)

print('  ...configure iface to be up')
network.iface_up(iface_name)

print('Access points:')
access_points = network.access_points(iface_name)
for ap in access_points:
    ap_str = ap.ssid + ': ' + ap.quality + '/70'
    print('  ' + ap_str)

if (args.ssid is None or args.pwd is None) and not args.last:
    print('Choose wifi and enter ssid and passphrase')
    exit(0)

print('Connecting...')

wpa_conf_filename = os.getcwd() + '/wpa.conf'
if not args.last:
    print('  ...generating wpa conf file')
    network.generate_wpa_conf(args.ssid, args.pwd, wpa_conf_filename)

print('  ...stopping all running wpa_supplicants')
network.killall_wpa_supplicants()

# do not run wpa_supplicant with -B - it's not killed when nem is killed
print('  ...connecting to wifi')
network.connect(iface_name, wpa_conf_filename)

print('  ...setting up dhcp')
network.dhcp(iface_name)

print('  ...setting up google DNS')
network.dns()

print('  ...ping google.com')
network.test()

while True:
    time.sleep(1)
